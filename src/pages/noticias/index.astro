---
import DashboardLayout from '../../layouts/DashboardLayout.astro';
import { newsService } from '../../services/newsService';

// Obtener todas las noticias
let news: any[] = [];
let loading = true;
let error: string | null = null;

try {
  const response = await newsService.getAllNews();
  news = response.data || [];
  loading = false;
} catch (err) {
  error = 'Error al cargar las noticias' as string | null;
  loading = false;
  console.error('Error al cargar noticias:', err);
}
---

<DashboardLayout titulo="Gestión de Noticias">
  <div class="max-w-7xl mx-auto py-8">
    <div class="mb-6 flex justify-between items-center">
      <h1 class="text-2xl font-bold text-gray-900">Todas las Noticias</h1>
      <a 
        href="/noticias/nueva" 
        class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-300 flex items-center"
      >
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
        </svg>
        Nueva Noticia
      </a>
    </div>
    
    <div class="bg-white rounded-2xl shadow-lg overflow-hidden">
      {loading && (
        <div class="p-8 text-center">
          <div class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mb-4"></div>
          <p class="text-gray-600">Cargando noticias...</p>
        </div>
      )}
      
      {error && (
        <div class="p-8 text-center">
          <svg class="w-12 h-12 text-red-500 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          <p class="text-red-500 font-medium">{error}</p>
          <button id="retry-button" class="mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-300">
            Reintentar
          </button>
        </div>
      )}
      
      {!loading && !error && news.length === 0 && (
        <div class="p-8 text-center">
          <svg class="w-12 h-12 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9.5a2 2 0 00-.586-1.414l-4.5-4.5A2 2 0 0012.586 3H12"></path>
          </svg>
          <p class="text-gray-600 font-medium">No hay noticias disponibles</p>
          <a href="/noticias/nueva" class="mt-4 inline-block px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-300">
            Crear primera noticia
          </a>
        </div>
      )}
      
      {!loading && !error && news.length > 0 && (
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Título
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Categoría
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Fecha
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Estado
                </th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Acciones
                </th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              {news.map((item: any) => (
                <tr>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="flex items-center">
                      <div class="flex-shrink-0 h-10 w-10">
                        <img class="h-10 w-10 rounded-md object-cover" src={item.principal_image || "https://via.placeholder.com/100"} alt={item.title} />
                      </div>
                      <div class="ml-4">
                        <div class="text-sm font-medium text-gray-900">{item.title}</div>
                        <div class="text-sm text-gray-500 truncate max-w-xs">{item.content.substring(0, 50)}...</div>
                      </div>
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="text-sm text-gray-900">
                      {item.categories && item.categories.length > 0 
                        ? item.categories.map((cat: any) => cat.category).join(', ') 
                        : 'Sin categoría'}
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="text-sm text-gray-900">{new Date(item.publication_date).toLocaleDateString()}</div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <span class={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${item.is_premium ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`}>
                      {item.is_premium ? 'Premium' : 'Estándar'}
                    </span>
                    {item.is_featured && (
                      <span class="ml-2 px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800">
                        Destacado
                      </span>
                    )}
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                    <div class="flex space-x-2">
                      <a href={`/noticias/${item.id}`} class="text-blue-600 hover:text-blue-900">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                        </svg>
                      </a>
                      <a href={`/noticias/editar/${item.id}`} class="text-indigo-600 hover:text-indigo-900">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                        </svg>
                      </a>
                      <button 
                        data-id={item.id} 
                        class="delete-button text-red-600 hover:text-red-900"
                      >
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                        </svg>
                      </button>
                    </div>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}
    </div>
  </div>
</DashboardLayout>

<script>
  import { newsService } from '../../services/newsService';
  import toast from 'react-hot-toast';
  
  // Verificar autenticación
  if (typeof window !== 'undefined') {
    const token = localStorage.getItem('token');
    if (!token) {
      window.location.href = '/login';
    }
  }
  
  document.addEventListener('DOMContentLoaded', () => {
    // Botón de reintentar
    const retryButton = document.getElementById('retry-button');
    retryButton?.addEventListener('click', () => {
      window.location.reload();
    });
    
    // Botones de eliminar
    const deleteButtons = document.querySelectorAll('.delete-button');
    deleteButtons.forEach(button => {
      button.addEventListener('click', async () => {
        const id = button.getAttribute('data-id');
        if (!id) return;
        
        if (confirm('¿Estás seguro de que deseas eliminar esta noticia? Esta acción no se puede deshacer.')) {
          try {
            await newsService.deleteNews(parseInt(id));
            toast.success('Noticia eliminada correctamente');
            // Recargar la página después de eliminar
            window.location.reload();
          } catch (error) {
            console.error('Error al eliminar la noticia:', error);
            toast.error('Error al eliminar la noticia');
          }
        }
      });
    });
  });
</script>

