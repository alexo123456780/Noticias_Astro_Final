---
import Layout from '../layouts/Layout.astro';
---

<Layout titulo="Iniciar Sesión">
  <main class="min-h-screen flex relative">
  
    <div class="absolute inset-0 z-0">
      <img 
        src="https://images.unsplash.com/photo-1585464231875-d9ef1f5ad396?auto=format&fit=crop&q=80"
        alt="Catedral de Mérida"
        class="w-full h-full object-cover"
      />
      <div class="absolute inset-0 bg-black/30 backdrop-blur-[2px]"></div>
    </div>

    
    <div class="w-1/2 flex items-center justify-center p-8 bg-white/95 backdrop-blur-lg relative z-10">
      <div class="w-full max-w-md space-y-8">
        <div class="text-center animate-fade-in">
          <div class="flex justify-center mb-6">
            <div class="p-4 bg-emerald-100 rounded-2xl">
              <svg class="w-12 h-12 text-emerald-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z"></path>
              </svg>
            </div>
          </div>
          <h2 class="text-4xl font-bold text-gray-900 tracking-tight">Bienvenido</h2>
          <p class="mt-2 text-lg text-gray-600">
            Inicia sesión en tu cuenta
          </p>
        </div>
        
        <form id="loginForm" class="mt-8 space-y-6 animate-fade-in-delayed">
          <div class="space-y-5">
            <div class="transform transition-all duration-300 hover:scale-[1.02]">
              <label for="email" class="block text-sm font-medium text-gray-700">
                Correo Electrónico
              </label>
              <div class="mt-1">
                <input
                  id="email"
                  name="email"
                  type="email"
                  required
                  class="appearance-none block w-full px-4 py-3 border border-gray-300 rounded-xl shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all duration-300"
                  placeholder="tu@email.com"
                />
              </div>
            </div>

            <div class="transform transition-all duration-300 hover:scale-[1.02]">
              <label for="password" class="block text-sm font-medium text-gray-700">
                Contraseña
              </label>
              <div class="mt-1">
                <input
                  id="password"
                  name="password"
                  type="password"
                  required
                  class="appearance-none block w-full px-4 py-3 border border-gray-300 rounded-xl shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all duration-300"
                />
              </div>
            </div>
          </div>

          <div class="flex items-center justify-between">
            <div class="flex items-center">
              <input
                id="remember-me"
                name="remember-me"
                type="checkbox"
                class="h-4 w-4 text-emerald-600 focus:ring-emerald-500 border-gray-300 rounded"
              />
              <label for="remember-me" class="ml-2 block text-sm text-gray-700">
                Recordarme
              </label>
            </div>
          </div>

          <div>
            <button
              type="submit"
              class="group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-xl text-white bg-gradient-to-r from-emerald-500 to-teal-600 hover:from-emerald-600 hover:to-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500 transform transition-all duration-300 hover:scale-[1.02] shadow-lg hover:shadow-xl"
            >
              <span class="absolute left-0 inset-y-0 flex items-center pl-3">
                <svg class="h-5 w-5 text-emerald-100 group-hover:text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z"></path>
                </svg>
              </span>
              Iniciar Sesión
            </button>
          </div>

          <div class="text-center">
            <a
              href="/registro"
              class="font-medium text-emerald-600 hover:text-emerald-500 transition-colors duration-300"
            >
              ¿No tienes cuenta? Regístrate aquí
            </a>
          </div>
        </form>
      </div>
    </div>

    <!-- Panel derecho - Solo fondo -->
    <div class="w-1/2 relative z-10"></div>

    <!-- Modal de Validación -->
    <div id="validationModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 opacity-0 pointer-events-none transition-opacity duration-300">
      <div class="bg-white rounded-2xl p-8 max-w-md w-full mx-4 transform scale-95 transition-transform duration-300">
        <div class="text-center">
          <!-- Estado de carga -->
          <div id="loadingState" class="hidden">
            <div class="animate-spin rounded-full h-16 w-16 border-b-2 border-emerald-500 mx-auto mb-4"></div>
            <h3 class="text-xl font-semibold text-gray-900 mb-2">Validando credenciales</h3>
            <p class="text-gray-600">Por favor espera un momento...</p>
          </div>

          <!-- Estado de éxito -->
          <div id="successState" class="hidden">
            <div class="mx-auto flex items-center justify-center h-16 w-16 rounded-full bg-green-100 mb-4">
              <svg class="h-8 w-8 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
            </div>
            <h3 class="text-xl font-semibold text-gray-900 mb-2">¡Inicio de sesión exitoso!</h3>
            <p class="text-gray-600">Bienvenido !!!...</p>
          </div>

          <!-- Estado de error -->
          <div id="errorState" class="hidden">
            <div class="mx-auto flex items-center justify-center h-16 w-16 rounded-full bg-red-100 mb-4">
              <svg class="h-8 w-8 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </div>
            <h3 class="text-xl font-semibold text-gray-900 mb-2">Error de autenticación</h3>
            <p class="text-gray-600">Las credenciales son incorrectas</p>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>


<!-- Animaciones de las goods -->

<style>
  @keyframes fade-in {
    0% { opacity: 0; transform: translateY(10px); }
    100% { opacity: 1; transform: translateY(0); }
  }
  
  .animate-fade-in {
    animation: fade-in 0.6s ease-out forwards;
  }
  
  .animate-fade-in-delayed {
    animation: fade-in 0.6s ease-out 0.2s forwards;
    opacity: 0;
  }
</style>

<script>
  import { useAuthStore } from '../stores/authStore';

  const loginForm = document.getElementById('loginForm');
  const validationModal = document.getElementById('validationModal');
  const loadingState = document.getElementById('loadingState');
  const successState = document.getElementById('successState');
  const errorState = document.getElementById('errorState');
  
  
  const urlParams = new URLSearchParams(window.location.search);
  const loginType = urlParams.get('type') || 'reader'; 
  
  
  const loginTitle = document.querySelector('h2');
  if (loginTitle) {
    loginTitle.textContent = loginType === 'redactor' ? 'Bienvenido Redactor' : 'Bienvenido Lector';
  }
  
  
  const loginDescription = document.querySelector('h2 + p');
  if (loginDescription) {
    loginDescription.textContent = loginType === 'redactor' 
      ? 'Inicia sesión como redactor para crear noticias' 
      : 'Inicia sesión como lector para acceder a contenido';
  }

  function showModal() {
    if (validationModal) {
      validationModal.style.opacity = '1';
      validationModal.style.pointerEvents = 'auto';
      const modalContent = validationModal.querySelector('div');
      if (modalContent) {
        modalContent.style.transform = 'scale(1)';
      }
    }
  }

  function hideModal() {
    if (validationModal) {
      validationModal.style.opacity = '0';
      validationModal.style.pointerEvents = 'none';
      const modalContent = validationModal.querySelector('div');
      if (modalContent) {
        modalContent.style.transform = 'scale(0.95)';
      }
    }
  }

  function showState(stateElement: HTMLElement | null) {
    [loadingState, successState, errorState].forEach(state => {
      if (state) {
        state.classList.add('hidden');
      }
    });
    if (stateElement) {
      stateElement.classList.remove('hidden');
    }
  }

  loginForm?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target as HTMLFormElement);
    const email = formData.get('email') as string;
    const password = formData.get('password') as string;

    showModal();
    showState(loadingState);

    try {
      // Usar el tipo de usuario (reader o redactor) para el inicio de sesión
      // Esto asegura que se use la API correcta según el tipo de usuario
      await useAuthStore.getState().login(email, password, loginType);
      showState(successState);
      setTimeout(() => {
        // Redirigir según el tipo de usuario
        if (loginType === 'redactor') {
          window.location.href = '/noticias'; // Redactores van al gestor de noticias
        } else {
          window.location.href = '/dashboard'; // Lectores van al dashboard
        }
      }, 2000);
    } catch (error: any) {
      showState(errorState);
      setTimeout(() => {
        hideModal();
      }, 1000);
    }
  });
</script>