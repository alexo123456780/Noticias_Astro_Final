---
import Layout from '../layouts/Layout.astro';
---

<Layout titulo="Iniciar Sesión">
  <main class="min-h-screen flex">
    <!-- Panel izquierdo - Formulario -->
    <div class="w-1/2 flex items-center justify-center p-8 bg-white">
      <div class="w-full max-w-md space-y-8">
        <div class="text-center animate-fade-in">
          <div class="flex justify-center mb-6">
            <div class="p-4 bg-emerald-100 rounded-2xl">
              <svg class="w-12 h-12 text-emerald-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z"></path>
              </svg>
            </div>
          </div>
          <h2 class="text-4xl font-bold text-gray-900 tracking-tight">Bienvenido</h2>
          <p class="mt-2 text-lg text-gray-600">
            Inicia sesión en tu cuenta
          </p>
        </div>
        
        <form id="loginForm" class="mt-8 space-y-6 animate-fade-in-delayed">
          <div class="space-y-5">
            <div class="transform transition-all duration-300 hover:scale-[1.02]">
              <label for="email" class="block text-sm font-medium text-gray-700">
                Correo Electrónico
              </label>
              <div class="mt-1">
                <input
                  id="email"
                  name="email"
                  type="email"
                  required
                  class="appearance-none block w-full px-4 py-3 border border-gray-300 rounded-xl shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all duration-300"
                  placeholder="tu@email.com"

                />
              </div>
            </div>

            <div class="transform transition-all duration-300 hover:scale-[1.02]">
              <label for="password" class="block text-sm font-medium text-gray-700">
                Contraseña
              </label>
              <div class="mt-1">
                <input
                  id="password"
                  name="password"
                  type="password"
                  required
                  class="appearance-none block w-full px-4 py-3 border border-gray-300 rounded-xl shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all duration-300"
                />
              </div>
            </div>
          </div>

          <div class="flex items-center justify-between">
            <div class="flex items-center">
              <input
                id="remember-me"
                name="remember-me"
                type="checkbox"
                class="h-4 w-4 text-emerald-600 focus:ring-emerald-500 border-gray-300 rounded"
              />
              <label for="remember-me" class="ml-2 block text-sm text-gray-700">
                Recordarme
              </label>
            </div>
          </div>

          <div>
            <button
              type="submit"
              class="group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-xl text-white bg-gradient-to-r from-emerald-500 to-teal-600 hover:from-emerald-600 hover:to-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500 transform transition-all duration-300 hover:scale-[1.02] shadow-lg hover:shadow-xl"
            >
              <span class="absolute left-0 inset-y-0 flex items-center pl-3">
                <svg class="h-5 w-5 text-emerald-100 group-hover:text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z"></path>
                </svg>
              </span>
              Iniciar Sesión
            </button>
          </div>

          <div class="text-center">
            <a
              href="/registro"
              class="font-medium text-emerald-600 hover:text-emerald-500 transition-colors duration-300"
            >
              ¿No tienes cuenta? Regístrate aquí
            </a>
          </div>
        </form>
        
        <!-- Toast Notifications -->
        <div id="successToast" class="fixed top-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg transform translate-x-full transition-transform duration-300 opacity-0">
          ¡Inicio de sesión exitoso!
        </div>
        <div id="errorToast" class="fixed top-4 right-4 bg-red-500 text-white px-6 py-3 rounded-lg shadow-lg transform translate-x-full transition-transform duration-300 opacity-0">
          Credenciales inválidas
        </div>
      </div>
    </div>

    <!-- Panel derecho - Imagen decorativa -->
    <div class="w-1/2 bg-gradient-to-br from-emerald-500 via-teal-500 to-cyan-600 relative overflow-hidden animate-gradient-x">
      <div class="absolute inset-0 pattern-leaves opacity-10"></div>
      <div class="absolute inset-0 flex items-center justify-center">
        <div class="text-center text-white p-8 animate-float">
        </div>
      </div>
    </div>
  </main>
</Layout>

<style>
  @keyframes gradient-x {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }
  
  .animate-gradient-x {
    background-size: 200% 200%;
    animation: gradient-x 15s ease infinite;
  }
  
  @keyframes float {
    0% { transform: translateY(0px); }
    50% { transform: translateY(-20px); }
    100% { transform: translateY(0px); }
  }
  
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
  
  @keyframes fade-in {
    0% { opacity: 0; transform: translateY(10px); }
    100% { opacity: 1; transform: translateY(0); }
  }
  
  .animate-fade-in {
    animation: fade-in 0.6s ease-out forwards;
  }
  
  .animate-fade-in-delayed {
    animation: fade-in 0.6s ease-out 0.2s forwards;
    opacity: 0;
  }
  
  .pattern-leaves {
    background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M54.627 0l.83.828-1.415 1.415L51.8 0h2.827zM5.373 0l-.83.828L5.96 2.243 8.2 0H5.374zM48.97 0l3.657 3.657-1.414 1.414L46.143 0h2.828zM11.03 0L7.372 3.657 8.787 5.07 13.857 0H11.03zm32.284 0L49.8 6.485 48.384 7.9l-7.9-7.9h2.83zM16.686 0L10.2 6.485 11.616 7.9l7.9-7.9h-2.83zM22.344 0L13.858 8.485 15.272 9.9l7.9-7.9h-.828zm5.656 0L17.515 10.485 18.93 11.9l7.9-7.9h-2.83zm5.656 0l-9.9 9.9 1.415 1.415 7.9-7.9h-2.83zm5.657 0l-9.9 9.9 1.415 1.415 7.9-7.9h-2.83zM38.97 0l-9.9 9.9 1.415 1.415L41.8 0h-2.83zm5.657 0l-9.9 9.9 1.415 1.415L47.457 0h-2.83zm5.657 0l-9.9 9.9 1.415 1.415L53.114 0h-2.83zm5.657 0l-9.9 9.9 1.415 1.415L58.77 0h-2.83zm5.657 0l-9.9 9.9 1.415 1.415L64.428 0h-2.83zm5.657 0l-9.9 9.9 1.415 1.415L70.085 0h-2.83zm5.657 0l-9.9 9.9 1.415 1.415L75.742 0h-2.83zm5.657 0l-9.9 9.9 1.415 1.415L81.4 0h-2.83zm5.657 0l-9.9 9.9 1.415 1.415L87.057 0h-2.83zm5.657 0l-9.9 9.9 1.415 1.415L92.714 0h-2.83zm5.657 0l-9.9 9.9 1.415 1.415L98.37 0h-2.83zm5.657 0l-9.9 9.9 1.415 1.415L104.028 0h-2.83z' fill='%23ffffff' fill-opacity='0.4' fill-rule='evenodd'/%3E%3C/svg%3E");
  }
</style>

<script>
  import { useAuthStore } from '../stores/authStore';
  import toast from 'react-hot-toast';

  const loginForm = document.getElementById('loginForm');
  const successToast = document.getElementById('successToast');
  const errorToast = document.getElementById('errorToast');

  function showToast(element: HTMLElement | null) {
    if (element) {
      element.style.transform = 'translateX(0)';
      element.style.opacity = '1';
      setTimeout(() => {
        element.style.transform = 'translateX(100%)';
        element.style.opacity = '0';
      }, 3000);
    }
  }

  loginForm?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target as HTMLFormElement);
    const email = formData.get('email') as string;
    const password = formData.get('password') as string;

    try {
      await useAuthStore.getState().login(email, password);
      showToast(successToast);
      setTimeout(() => {
        window.location.href = '/dashboard';
      }, 1000);
    } catch (error: any) {
      showToast(errorToast);
    }
  });
</script>