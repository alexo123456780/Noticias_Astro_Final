---
import DashboardLayout from '../layouts/DashboardLayout.astro';
import PremiumBanner from '../components/PremiumBanner.astro';
import CategoryFilter from '../components/CategoryFilter.astro';
import NewsCard from '../components/NewsCard.astro';
import PremiumContent from '../components/PremiumContent.astro';
import Footer from '../components/Footer.astro';
import TopNavbar from '../components/TopNavbar.astro';

// Importar servicios
import { newsService } from '../services/newsService';
import { redactionService } from '../services/redactionService';
import type { News, Category } from '../types/news';

// Obtener datos de la API
let news: News[] = [];
let categories: Category[] = [];
let loading = true;
let error: string | null = null;

try {
  const [newsResponse, categoriesResponse] = await Promise.all([
    newsService.getAllNews(),
    newsService.getAllCategories()
  ]);
  
  news = newsResponse.data || [];
  categories = categoriesResponse.data || [];
  loading = false;
} catch (err) {
  error = 'Error al cargar datos';
  loading = false;
  console.error('Error al cargar datos:', err);
}

// Filtrar noticias destacadas y recientes
const featuredNews = news.filter(item => item.is_featured);
const latestNews = news.slice(0, 6);

// Estadísticas
const stats = [
  {
    title: "Total Noticias",
    value: news.length,
    description: "Sobre Mérida este mes",
    icon: "M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9.5a2 2 0 00-.586-1.414l-4.5-4.5A2 2 0 0012.586 3H12",
    color: "red"
  },
  {
    title: "Visitas",
    value: "850K",
    description: "Este mes",
    icon: "M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z",
    color: "blue"
  },
  {
    title: "Comentarios",
    value: "5,842",
    description: "Últimos 30 días",
    icon: "M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z",
    color: "green"
  },
  {
    title: "Premium",
    value: "2.3K",
    description: "Suscriptores activos",
    icon: "M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z",
    color: "yellow"
  }
];

// Categorías populares con conteo de noticias
const popularCategories = categories.map(category => {
  // Contar cuántas noticias hay en cada categoría
  const count = news.filter(item => {
    if (Array.isArray(item.categories)) {
      return item.categories.some(cat => 
        typeof cat === 'object' ? cat.id === category.id : cat === category.id
      );
    }
    return false;
  }).length;
  
  return {
    name: category.category,
    count: count || category.news_count || 0,
    color: "red"
  };
});

// Obtener noticias más populares (simuladas)
const popularNews = [...news].sort(() => 0.5 - Math.random()).slice(0, 4);
---

<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Noticias Mérida" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>Noticias Mérida</title>
  </head>
  <body class="bg-gray-100 min-h-screen">
    <!-- Barra de navegación superior -->
    <TopNavbar />

    <div class="max-w-screen-2xl mx-auto px-4 py-6">
      <h1 class="text-3xl font-bold mb-6 border-b-2 border-red-600 pb-2">Noticias Principales</h1>

      <!-- Contenido principal -->
      <div class="mb-8">
        <!-- Noticia principal destacada -->
        {!loading && !error && featuredNews.length > 0 && (
          <section class="mb-8">
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {featuredNews.slice(0, 3).map((item) => (
                <NewsCard 
                  title={item.title}
                  excerpt={item.content}
                  categories={item.categories as any}
                  image={item.principal_image}
                  author={item.editor?.name || 'Editor'}
                  time={item.publication_date}
                  isPremium={item.isPremium}
                  is_featured={item.is_featured}
                  id={item.id}
                  views={Math.floor(Math.random() * 500) + 100}
                />
              ))}
            </div>
          </section>
        )}

        <!-- Banner Premium -->
        <div class="mb-12">
          <PremiumBanner />
        </div>

        <!-- Categorías Seleccionables -->
        {!loading && !error && categories.length > 0 && (
          <section class="mb-8">
            <CategoryFilter categories={categories} />
          </section>
        )}

        {loading && (
          <div class="bg-white rounded-lg shadow overflow-hidden p-8 text-center mb-8">
            <div class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-red-600 mb-4"></div>
            <p class="text-gray-600">Cargando datos...</p>
          </div>
        )}
        
        {error && (
          <div class="bg-white rounded-lg shadow overflow-hidden p-8 text-center mb-8">
            <svg class="w-12 h-12 text-red-500 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <p class="text-red-500 font-medium">{error}</p>
            <button id="retry-button" class="mt-4 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors duration-300">
              Reintentar
            </button>
          </div>
        )}

        {!loading && !error && news.length === 0 && (
          <div class="bg-white rounded-lg shadow overflow-hidden p-8 text-center mb-8">
            <svg class="w-12 h-12 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9.5a2 2 0 00-.586-1.414l-4.5-4.5A2 2 0 0012.586 3H12"></path>
            </svg>
            <p class="text-gray-600 font-medium">No hay noticias disponibles</p>
            <a href="/noticias/nueva" class="mt-4 inline-block px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors duration-300">
              Crear primera noticia
            </a>
          </div>
        )}

        <!-- Sección principal de contenido -->
        {!loading && !error && news.length > 0 && (
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
            {latestNews.map((item) => (
              <NewsCard 
                title={item.title}
                excerpt={item.content}
                categories={item.categories as any}
                image={item.principal_image}
                author={item.editor?.name || 'Editor'}
                time={item.publication_date}
                isPremium={item.isPremium}
                is_featured={item.is_featured}
                id={item.id}
                views={Math.floor(Math.random() * 500) + 100}
              />
            ))}
          </div>
        )}

        <!-- Sección eliminada: Estadísticas -->
      </div>
    </div>

    <!-- Footer -->
    <Footer />

    <script>
      // Verificar autenticación
      if (typeof window !== 'undefined') {
        const token = localStorage.getItem('token');
        if (!token) {
          window.location.href = '/login';
        }
      }

      // Botón de reintentar
      document.addEventListener('DOMContentLoaded', () => {
        const retryButton = document.getElementById('retry-button');
        retryButton?.addEventListener('click', () => {
          window.location.reload();
        });

        // Funcionalidad para los botones de categoría
        const categoryButtons = document.querySelectorAll('[data-category]');

        categoryButtons.forEach(button => {
          button.addEventListener('click', () => {
            const category = button.getAttribute('data-category');
            // Filtrar noticias visibles según la categoría
            filterNewsByCategory(category);
          });
        });
      });

      // Función para filtrar noticias por categoría
      function filterNewsByCategory(category) {
        const newsItems = document.querySelectorAll('.news-item');

        if (category === 'all') {
          // Mostrar todas las noticias
          newsItems.forEach(item => {
            if (item instanceof HTMLElement) {
              item.style.display = 'block';
            }
          });
        } else {
          // Mostrar solo las noticias de la categoría seleccionada
          newsItems.forEach(item => {
            const newsCategory = item.getAttribute('data-category');
            if (item instanceof HTMLElement) {
              if (newsCategory === category) {
                item.style.display = 'block';
              } else {
                item.style.display = 'none';
              }
            }
          });
        }
      }
    </script>
  </body>
</html>

