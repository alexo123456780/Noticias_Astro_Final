---
import Layout from './Layout.astro';

const { titulo } = Astro.props;

const secciones = {
  principal: [
    
    {
      nombre: "Noticias",
      icono: "M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9.5a2 2 0 00-.586-1.414l-4.5-4.5A2 2 0 0012.586 3H12",
      ruta: "/noticias"
    }
  ],
  contenido: [
    {
      nombre: "Redacciones",
      icono: "M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z",
      ruta: "/redacciones"
    },
    {
      nombre: "Categorías",
      icono: "M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z",
      ruta: "/categorias"
    }
  ],
  administracion: [
    {
      nombre: "Editores",
      icono: "M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z",
      ruta: "/editores"
    }
  ]
};
---

<Layout titulo={titulo}>
<div class="min-h-screen bg-gray-50">
  <!-- Sidebar -->
  <aside class="fixed inset-y-0 left-0 w-64 bg-white border-r border-gray-200 shadow-sm transform transition-transform duration-300 ease-in-out z-20">
    <div class="h-full flex flex-col">
      <!-- Logo -->
      <div class="flex items-center justify-center h-16 border-b border-gray-200">
        <h1 class="text-2xl font-bold text-red-600">Noticias Mérida</h1>
      </div>

      <!-- Navigation -->
      <nav class="flex-1 overflow-y-auto py-4">
        <div class="px-4 space-y-8">
          <!-- Secciones principales -->
          <div>
            <p class="px-3 text-xs font-semibold text-gray-500 uppercase tracking-wider">Principal</p>
            <div class="mt-2 space-y-1">
              {secciones.principal.map(item => (
                <a href={item.ruta} class="flex items-center px-3 py-2 text-sm font-medium text-gray-700 rounded-lg hover:bg-gray-100 hover:text-gray-900">
                  <svg class="w-5 h-5 mr-3 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={item.icono}></path>
                  </svg>
                  {item.nombre}
                </a>
              ))}
            </div>
          </div>

          <!-- Secciones de contenido -->
          <div>
            <p class="px-3 text-xs font-semibold text-gray-500 uppercase tracking-wider">Contenido</p>
            <div class="mt-2 space-y-1">
              {secciones.contenido.map(item => (
                <a href={item.ruta} class="flex items-center px-3 py-2 text-sm font-medium text-gray-700 rounded-lg hover:bg-gray-100 hover:text-gray-900">
                  <svg class="w-5 h-5 mr-3 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={item.icono}></path>
                  </svg>
                  {item.nombre}
                </a>
              ))}
            </div>
          </div>

          <!-- Secciones de administración -->
          <div>
            <p class="px-3 text-xs font-semibold text-gray-500 uppercase tracking-wider">Administración</p>
            <div class="mt-2 space-y-1">
              {secciones.administracion.map(item => (
                <a href={item.ruta} class="flex items-center px-3 py-2 text-sm font-medium text-gray-700 rounded-lg hover:bg-gray-100 hover:text-gray-900">
                  <svg class="w-5 h-5 mr-3 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={item.icono}></path>
                  </svg>
                  {item.nombre}
                </a>
              ))}
            </div>
          </div>
        </div>
      </nav>

      <!-- User Menu -->
      <div class="p-4 border-t border-gray-200">
        <button
          id="cerrarSesion"
          class="w-full flex items-center px-3 py-2 text-sm font-medium text-red-600 rounded-lg hover:bg-red-50"
        >
          <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
          </svg>
          Cerrar Sesión
        </button>
      </div>
    </div>
  </aside>

  <!-- Main Content -->
  <div class="ml-64">
    <!-- Top Navigation -->
    <header class="bg-white border-b border-gray-200 sticky top-0 z-10 shadow-sm">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-center h-16 relative">
          <div class="flex items-center">
            <h2 class="text-2xl font-bold text-gray-900 tracking-tight">{titulo}</h2>
          </div>
          <div class="absolute right-0 flex items-center space-x-4">
            <!-- Notificaciones -->
            <button class="p-2 text-gray-400 hover:text-gray-500 focus:outline-none focus:text-gray-500 relative">
              <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"></path>
              </svg>
              <span class="absolute top-0 right-0 block h-2 w-2 rounded-full bg-red-500"></span>
            </button>
          </div>
        </div>
      </div>
    </header>

    <main class="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
      <slot />
    </main>
  </div>
</div>
</Layout>

<script>
import { useAuthStore } from '../stores/authStore';
import toast from 'react-hot-toast';

const cerrarSesionBtn = document.getElementById('cerrarSesion');
if (cerrarSesionBtn) {
  cerrarSesionBtn.addEventListener('click', () => {
    useAuthStore.getState().cerrarSesion();
    toast.success('Sesión cerrada correctamente');
    window.location.href = '/';
  });
}
</script>

